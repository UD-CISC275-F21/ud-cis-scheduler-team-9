{"version":3,"sources":["Components/ControlPanel.tsx","Components/SemesterTable.tsx","Components/AddSemesterModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ControlPanel","showModal","Col","Row","Button","className","id","onClick","SemesterTable","semester","Table","scope","courseList","map","course","index","department","courseID","AddSemesterModal","addSemester","setVisible","visible","useState","season","setSeason","setCourseList","creditTotal","setCreditTotal","expectedTuition","setExpectedTuition","setDepartment","setCourseID","description","setDescription","credits","setCredits","preReqs","setPreReqs","coReqs","setCoReqs","semestersOffered","setSemestersOffered","hide","Modal","show","onHide","backdrop","keyboard","datatestid","ModalHeader","closeButton","ModalBody","Form","onSubmit","event","preventDefault","Group","Label","Control","as","rows","minLength","maxLength","onChange","ev","target","value","toUpperCase","type","min","valueAsNumber","disabled","length","variant","App","plan","setPlan","Container","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6297d0e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\n\nexport function ControlPanel({showModal}: {showModal: (b:boolean)=>void}): JSX.Element{\n\n    return (\n        <Col>\n            <Row>\n                <Col>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Button className=\"button\" id=\"add-semester-button\" onClick={()=>showModal(true)}>Add Semester</Button>\n                </Col>\n            </Row>\n        </Col>\n    );\n}","import React from \"react\";\nimport { Col, Table } from \"react-bootstrap\";\nimport { Course } from \"../interface/course\";\nimport { Semester } from \"../interface/semester\";\n\nexport function SemesterTable({semester}: {semester: (Semester)}): JSX.Element {\n\n    function renderList(course: Course, index: number){\n        return (\n            <tr key={index}>\n                <td id=\"course-name\">{course.department+course.courseID}</td>\n            </tr>\n        );\n    }\n\n    return (\n        <Col>\n            <Table>\n                <thead className=\"thead-dark\">\n                    <tr>\n                        <th scope=\"col\">Course</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {semester.courseList.map(renderList)}\n                </tbody>\n            </Table>\n        </Col>\n    );\n}","import React, { useState } from \"react\";\nimport { Modal, Col, Row, ModalBody, Form, Button} from \"react-bootstrap\";\nimport { Season, Semester } from \"../interface/semester\";\nimport { Course } from \"../interface/course\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport { SemesterTable } from \"./SemesterTable\";\n\nexport function AddSemesterModal({ addSemester, setVisible, visible}:{\n    addSemester: (s: Semester)=>void,\n    setVisible: (v:boolean)=>void,\n    visible: (boolean)}): JSX.Element {\n\n    const [season, setSeason] = useState<Season>(0);\n    const [courseList, setCourseList] = useState<Course[]>([]);\n    const [creditTotal, setCreditTotal] = useState<number>(0);\n    const [expectedTuition, setExpectedTuition] = useState<number>(0);\n\n    const [department, setDepartment] = useState<string>(\"\");\n    const [courseID, setCourseID] = useState<number>(0);\n    const [description, setDescription] = useState<string>(\"\");\n    const [credits, setCredits] = useState<number>(0);\n    const [preReqs, setPreReqs] = useState<Course[]>([]);\n    const [coReqs, setCoReqs] = useState<Course[]>([]);\n    const [semestersOffered, setSemestersOffered] = useState<Season[]>([1]);\n\n\n    const hide = ()=>setVisible(false);\n\n    /* implement with drag function\n    function addCourse(course: Course){\n        setCourseList([...courseList, course]); \n    }*/\n\n    function validateForm() { // Makes sure that no text field is empty before submit\n        return department.length > 0 && courseID >= 100;\n    }\n\n    function handleSearch(event: {preventDefault: () => void; }){\n        event.preventDefault();\n        // For now this adds the courses to the table via the last call, \n        // in the future it will just search for a class to display before they decide to drag it into the table or not\n        // \n        //These set calls below are just place holders so the code will build\n        setSeason(1);\n        setCreditTotal(0);\n        setExpectedTuition(0);\n        setDescription(\"\");\n        setCredits(0);\n        setPreReqs([]);\n        setCoReqs([]);\n        setSemestersOffered([1]);\n        setCourseList([...courseList, {department, courseID, description, credits, preReqs, coReqs, semestersOffered}]);\n    }\n\n    function clearCourseList(){\n        setCourseList([]);\n    }\n\n    function saveSemester(){\n        addSemester({season, courseList, creditTotal, expectedTuition});\n        hide();\n    }\n\n    /*function addCourse(course: Course){\n        setCourseList([...courseList, course]);\n    }*/\n\n    return (\n        <Modal\n            show={visible}\n            onHide={hide}\n            backdrop=\"static\"\n            keyboard={false}\n            datatestid=\"add-semester-modal\"\n        >\n            <ModalHeader closeButton onClick={hide}></ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Form className=\"d-flex\" id=\"search-course-formm\" onSubmit={handleSearch}>\n                        <Form.Group>\n                            <Form.Label>\n                                Department\n                            </Form.Label>\n                            <Form.Control id=\"department-name\" as=\"textarea\" rows={1} \n                                minLength={3}\n                                maxLength={4}\n                                onChange={(ev: React.ChangeEvent<HTMLTextAreaElement>) => setDepartment(ev.target.value.toUpperCase())}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>\n                                Course ID\n                            </Form.Label>\n                            <Form.Control as=\"input\" type=\"number\"\n                                min={100}\n                                onChange={(ev: React.ChangeEvent<HTMLInputElement>) => setCourseID(ev.target.valueAsNumber)}/>\n                        </Form.Group>\n                        <Button className=\"button\" type=\"submit\" id=\"search-course-button\" disabled={!validateForm()}>\n                            Search\n                        </Button>\n                    </Form>\n                </Row>\n                <Row>\n                    <SemesterTable semester={{season, courseList, creditTotal, expectedTuition}}></SemesterTable>\n                </Row>\n                <Row>\n                    <Col>\n                        <Button className=\"button\" id=\"clear-course-list-button\" variant=\"danger\" onClick={clearCourseList}>Clear Semester</Button>\n                    </Col>\n                    <Col></Col>\n                    <Col>\n                        <Button className=\"button\" id=\"save-semester-button\" onClick={saveSemester}>Save Semester</Button>\n                    </Col>\n                </Row>\n                <Row></Row>\n            </ModalBody>\n        </Modal>\n    );\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { ControlPanel } from \"./Components/ControlPanel\";\nimport { AddSemesterModal } from \"./Components/AddSemesterModal\";\nimport { Semester } from \"./interface/semester\";\n\nfunction App(): JSX.Element {\n    const [plan, setPlan] = useState<Semester[]>([]);\n    const [visible, setVisible] = useState<boolean>(false);\n\n    function addSemester(semester:Semester){\n        setPlan([...plan, semester]);\n    }\n\n    function deleteAllSemesters(){\n        setPlan([]);\n        console.log(\"Deleted All Semesters\");\n    }\n\n    return (\n        <Container className=\"App\">\n            <Row>\n                <br></br>\n            </Row>\n            <Row>\n                <ControlPanel showModal={setVisible}></ControlPanel>\n            </Row>\n            <Row>\n                <AddSemesterModal addSemester={addSemester} setVisible={setVisible} visible={visible}></AddSemesterModal>\n                <Button className=\"button\" id=\"delete-all-button\" onClick = {() => deleteAllSemesters()}> Delete All Semesters</Button>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}