{"version":3,"sources":["Components/ControlPanel.tsx","Components/AddSemesterModal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ControlPanel","showModal","Col","Row","Button","className","id","onClick","AddSemesterModal","addSemester","setVisible","visible","useState","season","setSeason","courseList","setCourseList","creditTotal","setCreditTotal","tuition","setTuition","hide","Modal","show","onHide","backdrop","keyboard","datatestid","ModalHeader","closeButton","ModalBody","Form","onSubmit","event","preventDefault","Group","Label","Control","as","rows","autoCapitalize","type","semester","totalCredits","expectedTuition","App","plan","setPlan","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGO,SAASA,EAAT,GAAgF,IAAzDC,EAAwD,EAAxDA,UAE1B,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAACD,EAAA,EAAD,MAIJ,cAACC,EAAA,EAAD,UACI,cAACD,EAAA,EAAD,MAIJ,cAACC,EAAA,EAAD,UACI,cAACD,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAAQC,UAAU,SAASC,GAAG,sBAAsBC,QAAS,kBAAIN,GAAU,IAA3E,iC,oCCbb,SAASO,EAAT,GAGgC,IAHJC,EAGG,EAHHA,YAAaC,EAGV,EAHUA,WAAYC,EAGtB,EAHsBA,QAKxD,EAA4BC,mBAAiB,GAA7C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAmB,IAAvD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA8BN,mBAAiB,GAA/C,mBAAOO,EAAP,KAAgBC,EAAhB,KAGMC,EAAO,kBAAIX,GAAW,IAyB5B,OACI,eAACY,EAAA,EAAD,CACIC,KAAMZ,EACNa,OAAQH,EACRI,SAAS,SACTC,UAAU,EACVC,WAAW,qBALf,UAOI,cAACC,EAAA,EAAD,CAAaC,aAAW,EAACtB,QAASc,EAAlC,yBACA,eAACS,EAAA,EAAD,WACI,cAAC3B,EAAA,EAAD,UACI,eAAC4B,EAAA,EAAD,CAAMC,SA7BtB,SAAsBC,GAClBA,EAAMC,iBAENpB,EAAU,GACVI,EAAe,GACfE,EAAW,GACXJ,EAAc,KAuBF,UACI,cAACe,EAAA,EAAKI,MAAN,UACI,cAACJ,EAAA,EAAKK,MAAN,0BAIJ,cAACL,EAAA,EAAKM,QAAN,CAAcC,GAAG,WAAWC,KAAM,EAC9BC,eAAiB,OAGrB,cAACpC,EAAA,EAAD,CAAQC,UAAU,SAASoC,KAAK,SAASnC,GAAG,gBAA5C,yBAKR,eAACH,EAAA,EAAD,WACI,cAACD,EAAA,EAAD,IAEA,cAACA,EAAA,EAAD,OAGJ,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQG,QA1CxB,WAIIE,EAAY,CAACiC,SAHI7B,EAGME,aAAY4B,aAFd1B,EAE4B2B,gBADzBzB,SAyChB,cAAChB,EAAA,EAAD,UC/CD0C,MAvBf,WACI,MAAwBjC,mBAAqB,IAA7C,mBAAOkC,EAAP,KAAaC,EAAb,KACA,EAA8BnC,oBAAkB,GAAhD,mBAAOD,EAAP,KAAgBD,EAAhB,KAMA,OACI,eAACsC,EAAA,EAAD,CAAW3C,UAAU,MAArB,UACI,cAACF,EAAA,EAAD,IAGA,cAACA,EAAA,EAAD,UACI,cAACH,EAAD,CAAcC,UAAWS,MAE7B,cAACP,EAAA,EAAD,UACI,cAACK,EAAD,CAAkBC,YAb9B,SAAqBiC,GACjBK,EAAQ,GAAD,mBAAKD,GAAL,CAAWJ,MAYkChC,WAAYA,EAAYC,QAASA,UCV9EsC,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.0b687274.chunk.js","sourcesContent":["import React from \"react\";\nimport { Col, Row, Button } from \"react-bootstrap\";\n\nexport function ControlPanel({showModal}: {showModal: (b:boolean)=>void}): JSX.Element{\n\n    return (\n        <Col>\n            <Row>\n                <Col>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Button className=\"button\" id=\"add-semester-button\" onClick={()=>showModal(true)}>Add Semester</Button>\n                </Col>\n            </Row>\n        </Col>\n    );\n}","import React, { useState } from \"react\";\nimport { Modal, Col, Row, ModalBody, Form, Button} from \"react-bootstrap\";\nimport { Season, Semester } from \"../interface/semester\";\nimport { Course } from \"../interface/course\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\n\nexport function AddSemesterModal({ addSemester, setVisible, visible}:{\n    addSemester: (s: Semester)=>void,\n    setVisible: (v:boolean)=>void,\n    visible: (boolean)}): JSX.Element {\n\n    const [season, setSeason] = useState<Season>(0);\n    const [courseList, setCourseList] = useState<Course[]>([]);\n    const [creditTotal, setCreditTotal] = useState<number>(0);\n    const [tuition, setTuition] = useState<number>(0);\n\n\n    const hide = ()=>setVisible(false);\n\n    /* implement with drag function\n    function addCourse(course: Course){\n        setCourseList([...courseList, course]); \n    }*/\n\n    function handleSearch(event: {preventDefault: () => void; }){\n        event.preventDefault();\n        //these set calls below are just place holders for the code to build\n        setSeason(0);\n        setCreditTotal(0);\n        setTuition(0);\n        setCourseList([]);\n    }\n\n    function save(){\n        const semester = season;\n        const totalCredits = creditTotal;\n        const expectedTuition = tuition;\n        addSemester({semester, courseList, totalCredits, expectedTuition});\n        hide;\n    }\n\n\n    return (\n        <Modal\n            show={visible}\n            onHide={hide}\n            backdrop=\"static\"\n            keyboard={false}\n            datatestid=\"add-semester-modal\"\n        >\n            <ModalHeader closeButton onClick={hide}>AddSemester</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <Form onSubmit={handleSearch}>\n                        <Form.Group>\n                            <Form.Label>\n                                Course ID\n                            </Form.Label>\n                        </Form.Group>\n                        <Form.Control as=\"textarea\" rows={1}\n                            autoCapitalize = \"on\"\n                        >                         \n                        </Form.Control>\n                        <Button className=\"button\" type=\"submit\" id=\"search-button\">\n                            Search\n                        </Button>\n                    </Form>\n                </Row>\n                <Row>\n                    <Col>\n                    </Col>\n                    <Col>\n                    </Col>\n                </Row>\n                <Row>\n                    <Button onClick={save}></Button>\n                </Row>\n                <Row></Row>\n            </ModalBody>\n        </Modal>\n    );\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { ControlPanel } from \"./Components/ControlPanel\";\nimport { AddSemesterModal } from \"./Components/AddSemesterModal\";\nimport { Semester } from \"./interface/semester\";\n\nfunction App(): JSX.Element {\n    const [plan, setPlan] = useState<Semester[]>([]);\n    const [visible, setVisible] = useState<boolean>(false);\n\n    function addSemester(semester:Semester){\n        setPlan([...plan, semester]);\n    }\n\n    return (\n        <Container className=\"App\">\n            <Row>\n\n            </Row>\n            <Row>\n                <ControlPanel showModal={setVisible}></ControlPanel>\n            </Row>\n            <Row>\n                <AddSemesterModal addSemester={addSemester} setVisible={setVisible} visible={visible}></AddSemesterModal>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}